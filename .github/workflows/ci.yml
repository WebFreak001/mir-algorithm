name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  workflow_dispatch:
    # allow this workflow to be triggered manually

concurrency:
  group: gh-actions-${{ github.actor }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 'Load job configuration'
    runs-on: ubuntu-latest
    outputs:
      compilers: ${{ steps.load-config.outputs.compilers }}
    steps:
    - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
    - id: load-config
      uses: actions/github-script@v6
      with:
        script: |
          const base_compiler_config = require("./.github/workflows/compilers.json");
          const compilers = {"windows": [], "macos": [], "ubuntu": []};
          const {owner, repo} = context.repo;
          let commit_sha = context.sha;
          if (context.eventName == "pull_request") 
          {
            commit_sha = context.payload.pull_request.head.sha;
          }

          const commit = await github.rest.git.getCommit({
            owner,
            repo,
            commit_sha
          });
          const head_commit_message = commit.data.message;

          if (head_commit_message.includes("[windows-only]"))
          {
            compilers.windows = base_compiler_config;
          }
          else if (head_commit_message.includes("[macos-only]"))
          {
            compilers.macos = base_compiler_config;
          }
          else if (head_commit_message.includes("[ubuntu-only]"))
          {
            compilers.ubuntu = base_compiler_config;
          }
          else if (!head_commit_message.includes("[skip-ci]"))
          {
            compilers.windows = base_compiler_config;
            compilers.macos = base_compiler_config;
            compilers.ubuntu = base_compiler_config;
          }
          core.setOutput("compilers", JSON.stringify(compilers));

  macos:
    name: '[macos] x86_64/${{ matrix.dc }}'
    runs-on: macos-latest
    needs: setup
    continue-on-error: ${{ contains(matrix.dc, 'beta') || contains(matrix.dc, 'master') }}
    if: ${{ fromJSON(needs.setup.outputs.compilers).macos != '' && fromJSON(needs.setup.outputs.compilers).macos != '[]' }}
    env:
      ARCH: x86_64
    strategy:
      fail-fast: false
      matrix:
        dc: ${{ fromJSON(needs.setup.outputs.compilers).macos }}
    steps:
      - name: Checkout repo 
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
        with:
          fetch-depth: 0
      - name: Setup D compiler 
        uses: dlang-community/setup-dlang@763d869b4d67e50c3ccd142108c8bca2da9df166
        with:
          compiler: ${{ matrix.dc }}
      - name: Cache dub dependencies
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: ~/.dub/packages
          key: macos-latest-build-${{ hashFiles('**/dub.sdl', '**/dub.json') }}
          restore-keys: |
            macos-latest-build-
      - name: Build / test
        run: |
          dub test --arch=$ARCH --build=unittest-cov
          dub test --arch=$ARCH --combined
        shell: bash
      - name: Upload coverage data
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b

  ubuntu:
    name: '[ubuntu] ${{ matrix.arch }}/${{ matrix.dc }}'
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ fromJSON(needs.setup.outputs.compilers).ubuntu != '' && fromJSON(needs.setup.outputs.compilers).ubuntu != '[]' }}
    continue-on-error: ${{ contains(matrix.dc, 'beta') || contains(matrix.dc, 'master') }}
    env:
      ARCH: ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        dc: ${{ fromJSON(needs.setup.outputs.compilers).ubuntu }}
        arch: [x86, x86_64]
    steps:
      - name: Checkout repo 
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
        with:
          fetch-depth: 0
      - name: Setup D compiler 
        uses: dlang-community/setup-dlang@763d869b4d67e50c3ccd142108c8bca2da9df166
        with:
          compiler: ${{ matrix.dc }}
      - name: Install multi-lib for 32-bit systems
        if: matrix.arch == 'x86'
        run: sudo apt-get update && sudo apt-get install gcc-multilib
      - name: Cache dub dependencies
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: ~/.dub/packages
          key: ubuntu-latest-build-${{ hashFiles('**/dub.sdl', '**/dub.json') }}
          restore-keys: |
            ubuntu-latest-build-
      - name: Build / test 
        run: |
          dub test --arch=$ARCH --build=unittest-cov
          dub test --arch=$ARCH --combined 
        shell: bash
      - name: Upload coverage data
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b
  
  windows:
    name: '[windows] x86_64/${{ matrix.dc }}'
    runs-on: windows-latest
    needs: setup
    if: ${{ fromJSON(needs.setup.outputs.compilers).windows != '' && fromJSON(needs.setup.outputs.compilers).windows != '[]' }}
    continue-on-error: ${{ contains(matrix.dc, 'beta') || contains(matrix.dc, 'master') }}
    env:
      ARCH: x86_64
    strategy:
      fail-fast: false
      matrix:
        dc: ${{ fromJSON(needs.setup.outputs.compilers).windows }}
    steps:
      - name: Checkout repo 
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
        with:
          fetch-depth: 0
      - name: Setup D compiler 
        uses: dlang-community/setup-dlang@763d869b4d67e50c3ccd142108c8bca2da9df166
        with:
          compiler: ${{ matrix.dc }}
      - name: Cache dub dependencies
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: ~\AppData\Local\dub
          key: windows-latest-build-${{ hashFiles('**/dub.sdl', '**/dub.json') }}
          restore-keys: |
            windows-latest-build-
      - name: Build / test
        run: |
          dub test --arch=$ARCH --build=unittest-ci -c ci-bignum-test
          dub test --arch=$ARCH --build=unittest-ci -c ci-core-test
          dub test --arch=$ARCH --build=unittest-ci -c ci-test
          dub test --arch=$ARCH --combined
        shell: bash
      - name: Upload coverage data
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b
    
        
